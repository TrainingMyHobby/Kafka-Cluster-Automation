# https://www.middlewareinventory.com/blog/run-ansible-playbook-locally/#Method1_Specify_Localhost_in_your_hosts_directive_of_your_playbook
- name: AWS EC2 Zookeeper START {{ zookeeper_host }}
  set_fact: 
    greeting: "Started creating {{ zookeeper_host }}!"

- name: print greeting fact
  debug: var=greeting

- name: AWS EC2 Launching AWS instance using Ansible for Zookeeper host {{ zookeeper_host }}
  vars:
    aws_ec2_instances_setup_zookeeper: false
  tags: [ 'never', 'aws_ec2_instances_setup_zookeeper' ]
  when: aws_ec2_instances_setup_zookeeper
  ec2:
    # state: present
    wait: yes
    assign_public_ip: yes
    instance_type: t2.micro
    image: "{{ hostvars[zookeeper_host].host_image_id }}"
    region: "{{ hostvars[zookeeper_host].host_region_id }}"
    key_name: "{{ hostvars[zookeeper_host].host_keypair_name }}"
    group_id: "{{ hostvars[zookeeper_host].host_sec_group_id }}"
    # ssh_user: "{{ hostvars[zookeeper_host].host_ssh_user }}"
    # group: Ansible
    # count: 1
    # https://github.com/ansible/ansible-modules-core/issues/1009
    instance_tags:
      purpose: "{{ instance_tags_purpose }}"
      Env: "{{ instance_tags_env }}"
      Name: "{{ instance_tags_env }}-{{ hostvars[zookeeper_host].zookeeper_id }}"
    exact_count: 1
    count_tag:
      purpose: "{{ instance_tags_purpose }}"
      Env: "{{ instance_tags_env }}"
      Name: "{{ instance_tags_env }}-{{ hostvars[zookeeper_host].zookeeper_id }}"
    vpc_subnet_id: "{{ hostvars[zookeeper_host].host_subnent_id }}"
    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    # delegate_to: 127.0.0.1
  register: ec2

- name: print ec2
  debug: var=ec2

- name: print ec2.instances public_ip
  debug: var="{{ item }}"
  with_items: "{{ ec2.instances }}"

  # https://github.com/chrismeyersfsu/playbook-ec2_properties/blob/master/new_group.yml

# https://www.reddit.com/r/ansible/comments/dcb99c/class_dict_variable_is_not_defined/
- name: Wait for SSH {{ zookeeper_host }}
  wait_for:
    # host: "{{ item['public_ip'] }}"
    host: "{{ item['public_ip'] }}"
    port: 22
    delay: 10
    timeout: 320
    state: started
  with_items: "{{ ec2.instances }}"
  when: aws_ec2_instances_setup_zookeeper

- name: Wait a little longer for centos
  pause: seconds=20
  with_items: "{{ ec2.instances }}"
  when: aws_ec2_instances_setup_zookeeper


- name: Add hosts group temporary inventory group with pem path {{ zookeeper_host }}
  add_host:
    name: "{{ item['public_ip']  }}"
    groups: dynamic_hosts
    ansible_ssh_host: "{{ item['public_ip']  }}"
    # ansible_ssh_private_key_file: '{{ ansible_ssh_private_key_file }}'
    ansible_ssh_user: "{{ hostvars[zookeeper_host].host_ssh_user }}"
    ec2_vars: "{{ item }}"
    ec2_instance_ids: "{{ ec2['instance_ids']  }}"
  # with_indexed_items: ec2_instances
  with_items: "{{ ec2.instances }}"
  when: aws_ec2_instances_setup_zookeeper

- name: AWS EC2 Zookeeper END {{ zookeeper_host }}
  set_fact: 
    greeting: "Completed creating {{ zookeeper_host }}!"
